/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menupage_screen/menuPageViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>

menuPageViewBase::menuPageViewBase() :
    updateItemCallback(this, &menuPageViewBase::updateItemCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 240, 296);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 240, 296);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    scrollWheel.setPosition(17, 0, 207, 296);
    scrollWheel.setHorizontal(false);
    scrollWheel.setCircular(false);
    scrollWheel.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel.setSwipeAcceleration(10);
    scrollWheel.setDragAcceleration(10);
    scrollWheel.setNumberOfItems(8);
    scrollWheel.setSelectedItemOffset(5);
    scrollWheel.setOvershootPercentage(75);
    scrollWheel.setDrawableSize(54, 0);
    scrollWheel.setDrawables(scrollWheelListItems, updateItemCallback);
    scrollWheel.animateToItem(0, 0);
    add(scrollWheel);
}

menuPageViewBase::~menuPageViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void menuPageViewBase::setupScreen()
{
    scrollWheel.initialize();
    for (int i = 0; i < scrollWheelListItems.getNumberOfDrawables(); i++)
    {
        scrollWheelListItems[i].initialize();
    }
}

void menuPageViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheelListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        ScrollMenuPage* cc = (ScrollMenuPage*)d;
        scrollWheelUpdateItem(*cc, itemIndex);
    }
}
